from db.database import get_connection

# –†–∞–±–æ—Ç–∞ —Å –æ—Ç–¥–µ–ª–∞–º–∏

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ
def add_department(name: str, description: str = None):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –æ—Ç–¥–µ–ª –≤ —Ç–∞–±–ª–∏—Ü—É Departments.
    """
    conn = get_connection()
    cur = conn.cursor()
    try:
        cur.execute(
            """
            INSERT INTO Departments (name, description)
            VALUES (?, ?)
            """,
            (name, description),
        )
        conn.commit()
        print(f"‚úÖ –û—Ç–¥–µ–ª '{name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –æ—Ç–¥–µ–ª–∞: {e}")
    finally:
        conn.close()


# –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö
def list_departments():
    """
    –í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –æ—Ç–¥–µ–ª–æ–≤ —Å –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.
    """
    conn = get_connection()
    cur = conn.cursor()
    cur.execute(
        """
        SELECT d.id, d.name, d.description,
               COUNT(w.id) AS workers_count
        FROM Departments d
        LEFT JOIN Workers w ON w.department_id = d.id
        GROUP BY d.id, d.name, d.description
        ORDER BY d.name
        """
    )
    departments = cur.fetchall()
    conn.close()

    if not departments:
        print("\nüè¢ –ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—Ç–¥–µ–ª–æ–≤.")
        return

    print("\nüìã –°–ø–∏—Å–æ–∫ –æ—Ç–¥–µ–ª–æ–≤:")
    for dep in departments:
        print(f"  {dep['id']}. {dep['name']} ‚Äî {dep['description'] or '‚Äî'} ({dep['workers_count']} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤)")


# –ü–æ–∏—Å–∫
def find_department(name: str):
    """
    –ò—â–µ—Ç –æ—Ç–¥–µ–ª –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (—á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ, –±–µ–∑ —Ä–µ–≥–∏—Å—Ç—Ä–∞).
    """
    conn = get_connection()
    cur = conn.cursor()
    cur.execute(
        """
        SELECT d.id, d.name, d.description,
               COUNT(w.id) AS workers_count
        FROM Departments d
        LEFT JOIN Workers w ON w.department_id = d.id
        WHERE LOWER(d.name) LIKE ?
        GROUP BY d.id, d.name, d.description
        """,
        (f"%{name.lower()}%",),
    )
    results = cur.fetchall()
    conn.close()

    if not results:
        print(f"\n‚ùå –û—Ç–¥–µ–ª '{name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return

    print(f"\nüîç –ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π: {len(results)}")
    for dep in results:
        print(f"  {dep['id']}. {dep['name']} ‚Äî {dep['description'] or '‚Äî'} ({dep['workers_count']} —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤)")


# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
def update_department(dep_id: int, **kwargs):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ—Ç–¥–µ–ª–∞.
    –ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞:
        update_department(2, name="–û—Ç–¥–µ–ª –ø—Ä–æ–¥–∞–∂", description="–†–∞–±–æ—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏")
    """
    if not kwargs:
        print("‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")
        return

    conn = get_connection()
    cur = conn.cursor()

    fields = ", ".join([f"{k} = ?" for k in kwargs.keys()])
    values = list(kwargs.values()) + [dep_id]

    try:
        cur.execute(f"UPDATE Departments SET {fields} WHERE id = ?", values)
        conn.commit()
        print(f"‚úÖ –û—Ç–¥–µ–ª —Å ID={dep_id} –æ–±–Ω–æ–≤–ª—ë–Ω.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç–¥–µ–ª–∞: {e}")
    finally:
        conn.close()


# –£–¥–∞–ª–µ–Ω–∏–µ
def delete_department(dep_id: int):
    """
    –£–¥–∞–ª—è–µ—Ç –æ—Ç–¥–µ–ª –ø–æ ID (–ø—Ä–∏ —ç—Ç–æ–º —É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –Ω—É–∂–Ω–æ –æ–±–Ω—É–ª–∏—Ç—å department_id).
    """
    conn = get_connection()
    cur = conn.cursor()
    try:
        # –û–±–Ω—É–ª—è–µ–º department_id —É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, —á—Ç–æ–±—ã –Ω–µ –Ω–∞—Ä—É—à–∏—Ç—å —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç—å
        cur.execute("UPDATE Workers SET department_id = NULL WHERE department_id = ?", (dep_id,))
        cur.execute("DELETE FROM Departments WHERE id = ?", (dep_id,))
        conn.commit()
        print(f"üóëÔ∏è –û—Ç–¥–µ–ª —Å ID={dep_id} —É–¥–∞–ª—ë–Ω.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –æ—Ç–¥–µ–ª–∞: {e}")
    finally:
        conn.close()
