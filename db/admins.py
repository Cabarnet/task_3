from db.database import get_connection

# –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∞
def add_admin(fio: str, login: str, password: str):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    conn = get_connection()
    cur = conn.cursor()
    try:
        cur.execute(
            "INSERT INTO Admins (fio, login, password) VALUES (?, ?, ?)",
            (fio, login, password),
        )
        conn.commit()
        print(f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä '{fio}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
    finally:
        conn.close()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ –ª–æ–≥–∏–Ω—É
def get_admin_by_login(login: str):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–ø–∏—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ –ª–æ–≥–∏–Ω—É –∏–ª–∏ None"""
    conn = get_connection()
    cur = conn.cursor()
    cur.execute("SELECT * FROM Admins WHERE login = ?", (login,))
    admin = cur.fetchone()
    conn.close()
    return admin

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥–∞
def check_login(login: str, password: str) -> bool:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –≤–µ—Ä–Ω—ã"""
    conn = get_connection()
    cur = conn.cursor()
    cur.execute(
        "SELECT * FROM Admins WHERE login = ? AND password = ?",
        (login, password),
    )
    user = cur.fetchone()
    conn.close()
    return user is not None

# –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤
def list_admins():
    """–í—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
    conn = get_connection()
    cur = conn.cursor()
    cur.execute("SELECT id, fio, login FROM Admins")
    admins = cur.fetchall()
    conn.close()

    if not admins:
        print("\n–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.")
        return

    print("\nüìã –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:")
    for idx, admin in enumerate(admins, start=1):
        print(f"  {idx}. {admin['fio']} ({admin['login']})")

# –£–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
def delete_admin(login: str):
    """–£–¥–∞–ª—è–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ –ª–æ–≥–∏–Ω—É"""
    conn = get_connection()
    cur = conn.cursor()
    cur.execute("DELETE FROM Admins WHERE login = ?", (login,))
    conn.commit()
    conn.close()
    print(f"üóëÔ∏è –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å –ª–æ–≥–∏–Ω–æ–º '{login}' —É–¥–∞–ª—ë–Ω (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª).")

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞
def create_default_admin():
    """–°–æ–∑–¥–∞—ë—Ç –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞"""
    conn = get_connection()
    cur = conn.cursor()
    cur.execute("SELECT COUNT(*) as cnt FROM Admins")
    count = cur.fetchone()["cnt"]
    if count == 0:
        try:
            cur.execute(
                "INSERT INTO Admins (fio, login, password) VALUES (?, ?, ?)",
                ("–ü—Ä–æ—Å—Ç–æ –ú–µ–≥–∞ –•–∞–∫–µ—Ä", "mega", "hacker"),
            )
            conn.commit()
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
    conn.close()
