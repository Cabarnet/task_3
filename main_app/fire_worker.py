# main_app/fire_worker.py
import getpass
from db.database import get_connection
from ui.curses_utils import cinput, cprint


# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞
def fetch_workers():
    conn = get_connection()
    try:
        cur = conn.cursor()
        cur.execute("""
            SELECT W.id, W.fio, P.name AS position_name, D.name AS department_name
            FROM Workers AS W
            LEFT JOIN Positions AS P ON W.position_id = P.id
            LEFT JOIN Departments AS D ON W.department_id = D.id
            ORDER BY W.fio ASC
        """)
        return cur.fetchall()
    finally:
        conn.close()


# –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ –ë–î
def fetch_admin_password(login: str):
    conn = get_connection()
    try:
        cur = conn.cursor()
        cur.execute("SELECT password FROM Admins WHERE login = ?", (login,))
        row = cur.fetchone()
        return row["password"] if row else None
    finally:
        conn.close()


# –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ ID
def delete_worker(worker_id: int):
    conn = get_connection()
    try:
        cur = conn.cursor()
        cur.execute("DELETE FROM Workers WHERE id = ?", (worker_id,))
        conn.commit()
        return cur.rowcount > 0
    finally:
        conn.close()


# –í—ã–±–æ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
def choose_worker(stdscr):
    workers = fetch_workers()
    if not workers:
        cprint(stdscr, "‚ö†Ô∏è  –í –±–∞–∑–µ –Ω–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è —É–≤–æ–ª—å–Ω–µ–Ω–∏—è.")
        return None

    cprint(stdscr, "\nüìã –°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:")
    for i, w in enumerate(workers, start=1):
        cprint(stdscr, f"  {i}. {w['fio']} ({w['position_name']} ‚Äî {w['department_name']})")

    while True:
        choice = cinput(stdscr, 5, 4, "\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏–ª–∏ 0 –¥–ª—è –æ—Ç–º–µ–Ω—ã: ").strip()
        if choice == "0":
            return None
        if choice.isdigit() and 1 <= int(choice) <= len(workers):
            return workers[int(choice) - 1]
        cprint(stdscr, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")


# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
def confirm_fire(stdscr, worker_fio: str):
    cprint(stdscr, f"\n‚ö†Ô∏è  –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —É–≤–æ–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: {worker_fio}")
    confirm = cinput(stdscr, 5, 4, "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ (y/n): ").strip().lower()
    return confirm == "y"


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–æ–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def check_admin_password(stdscr):
    login = cinput(stdscr, 5, 4, "\n–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ").strip()
    stored_password = fetch_admin_password(login)
    if not stored_password:
        cprint(stdscr, "‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return False

    password = getpass.getpass("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ")
    if password != stored_password:
        cprint(stdscr, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å.")
        return False

    return True


# –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫ –ª–æ–≥–∏–∫–∏ —É–≤–æ–ª—å–Ω–µ–Ω–∏—è
def fire_worker_flow(stdscr):
    """
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –∏ —É–¥–∞–ª–∏—Ç—å –µ–≥–æ –∏–∑ –±–∞–∑—ã.
    –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –ø–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    """
    cprint(stdscr, "\n=== –£–≤–æ–ª—å–Ω–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ ===")
    worker = choose_worker()
    if not worker:
        cprint(stdscr, "–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏.")
        return

    if not confirm_fire(worker["fio"]):
        cprint(stdscr, "‚ùé –£–≤–æ–ª—å–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
        return

    if not check_admin_password():
        cprint(stdscr, "üö´ –û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ.")
        return

    if delete_worker(worker["id"]):
        cprint(stdscr, f"‚úÖ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ {worker['fio']} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ –±–∞–∑—ã.")
    else:
        cprint(stdscr, "‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.")

    cinput(stdscr, 5, 4, "\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é...")


# –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫
if __name__ == "__main__":
    fire_worker_flow()
